<UserControl x:Class="BlogReader.CustomControls.GridFilterPopup.GridFilterPopupButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:fontAwesome="http://schemas.fontawesome.io/icons/"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:gridfilterpopup="clr-namespace:BlogReader.CustomControls.GridFilterPopup"
             x:Name="GridFilterPopupBtn"
             FontWeight="Bold"
             mc:Ignorable="d">
    
    <Grid>

        <Button Click="FilterPopupButton_Click"
                x:Name="FilterPopupButton"
                Tag="False">  <!--Is Filter Active-->
               
            <Button.Content>

                <fontAwesome:ImageAwesome Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                            AncestorType={x:Type Button}}, 
                                                            Path=Foreground}"
                                          Width="12" Height="12"
                                          Icon="Filter" />

            </Button.Content>

            <Button.Style>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource TertiaryButtonStyle}">

                    <Setter Property="Foreground" Value="{StaticResource PrimaryButtonColorBrush}" />

                    <Style.Triggers>
                        
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
                        </Trigger>

                        <!--Is Filter Active-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                     Value="True">

                            <Setter Property="Foreground" Value="{StaticResource PrimaryBackgroundColorBrush}" />
                            <Setter Property="Background" Value="{StaticResource PrimaryButtonColorBrush}" />

                        </DataTrigger>

                        <MultiDataTrigger>

                            <MultiDataTrigger.Conditions>
                                
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsMouseOver}"
                                           Value="True" />

                                <!--Is Filter Active-->
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Tag}"
                                           Value="True" />
                                
                            </MultiDataTrigger.Conditions>

                            <Setter Property="Foreground" Value="{StaticResource PrimaryBackgroundColorBrush}" />
                            <Setter Property="Background" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
                            
                        </MultiDataTrigger>
                        
                    </Style.Triggers>

                </Style>
            </Button.Style>

        </Button>

        <Popup PlacementTarget="{Binding ElementName=FilterButton}"
               PopupAnimation="Scroll"
               x:Name="FilterPopup"
               IsOpen="False">

            <Border BorderThickness="2" BorderBrush="{StaticResource BackgrounHighlightColorBrush}"
                    Background="{StaticResource SecondaryBackgroundColorBrush}" 
                    Padding="10">
                
                <Grid>
                    
                    <Grid.RowDefinitions>
                        
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        
                    </Grid.RowDefinitions>

                    <gridfilterpopup:GridFilterPopupCondition FilterDescriptor="{Binding ElementName=GridFilterPopupBtn, Path=FilterDescriptor}"
                                                              x:Name="FirstCondition" />

                    <Button Click="AddConditionButton_Click"
                            x:Name="AddConditionButton"
                            Content="Add Condition"
                            Margin="0 15 0 0"
                            Grid.Row="1" />

                    <Grid x:Name="SecondConditionContainerGrid"
                          Visibility="Collapsed"
                          Margin="0 15 0 0" 
                          Grid.Row="2">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border BorderThickness="0 2 0 0" BorderBrush="{StaticResource BackgrounHighlightColorBrush}">
                            
                            <ComboBox ItemsSource="{Binding Converter={StaticResource EnumToItemSourceConverter}, ConverterParameter={x:Type gridfilterpopup:GridFilterConditionType}}"
                                      SelectedValue="{x:Static gridfilterpopup:GridFilterConditionType.AND}"
                                      x:Name="FilterConditionTypeComboBox" 
                                      DisplayMemberPath="DisplayName" 
                                      SelectedValuePath="Value" 
                                      Margin="0 15 0 0" />
                            
                        </Border>

                        <gridfilterpopup:GridFilterPopupCondition FilterDescriptor="{Binding ElementName=GridFilterPopupBtn, Path=FilterDescriptor}"
                                                                  x:Name="SecondCondition"
                                                                  Margin="0 15 0 0"
                                                                  Grid.Row="1" />

                        <Button Style="{StaticResource TertiaryButtonStyle}" 
                                Click="RemoveConditionButton_Click"
                                Content="Remove Condition"
                                Margin="0 15 0 0"
                                Grid.Row="2" />

                    </Grid>

                    <Grid Grid.Row="3" Margin="0 10 0 0">

                        <Button Click="FilterButton_Click"
                                HorizontalAlignment="Left" 
                                Content="Filter" />
                        
                        <Button Style="{StaticResource TertiaryButtonStyle}"
                                HorizontalAlignment="Right"
                                Click="ClearButton_Click"
                                Content="Clear" />

                    </Grid>
                    
                </Grid>
                        
            </Border>

        </Popup>

    </Grid>

</UserControl>