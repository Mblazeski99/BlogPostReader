<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fontAwesome="http://schemas.fontawesome.io/icons/">

    <!--#region Window -->
    <Style x:Key="WindowViewStyle" TargetType="Window">
        
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />

    </Style>

    <Style TargetType="Window" BasedOn="{StaticResource WindowViewStyle}" />
    <!--#endregion-->

    <!--#region TextBlock -->
    <Style x:Key="DataPropertyErrorTextBlock" TargetType="TextBlock">

        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Foreground" Value="{StaticResource ErrorColorBrush}" />
        <Setter Property="FontWeight" Value="Heavy" />
        <Setter Property="FontSize" Value="12" />

    </Style>
    <!--#endregion-->
    
    <!--#region TextBox -->
    <Style x:Key="TextBoxStyle" TargetType="TextBox">

        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Height" Value="36" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template" Value="{StaticResource TextBoxControlTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>

    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStyle}" />
    <!--#endregion-->

    <!--#region Label -->
    <Style x:Key="LabelStyle" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
    </Style>

    <Style TargetType="{x:Type Label}" BasedOn="{StaticResource LabelStyle}" />
    <!--#endregion-->
    
    <!--#region Button -->
    <Style x:Key="ButtonStyle" TargetType="Button">

        <Setter Property="Padding" Value="10 5" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="2" />
            </Style>
        </Style.Resources>

    </Style>
    
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">

        <Setter Property="Background" Value="{StaticResource PrimaryButtonColorBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">

        <Setter Property="Foreground" Value="{StaticResource PrimaryButtonColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Height" Value="34" />
        <Setter Property="MinWidth" Value="160" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">

                <Setter Property="Background" Value="{StaticResource PrimaryButtonColorBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource SecondaryBackgroundColorBrush}" />

            </Trigger>
        </Style.Triggers>

        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="17" />
            </Style>
        </Style.Resources>

    </Style>

    <Style x:Key="TertiaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonStyle}">

        <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonColorBrush}" />
        <Setter Property="BorderThickness" Value="2" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource SecondaryButtonStyle}">

        <Setter Property="MinWidth" Value="36" />
        <Setter Property="Width" Value="36" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderThickness" Value="0" />

    </Style>

    <Style x:Key="DataGridColumnPrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style x:Key="DataGridColumnSecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource SecondaryButtonStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="30" />
        <Setter Property="MinWidth" Value="0" />
    </Style>

    <Style x:Key="DataGridColumnTertiaryButtonStyle" TargetType="Button" BasedOn="{StaticResource TertiaryButtonStyle}">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="30" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}" />
    <!--#endregion-->
    
    <!--#region ToggleButton -->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="Template" Value="{StaticResource ToggleButtonControlTemplate}" />
        
    </Style>
    
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyle}" />
    <!--#endregion-->
    
    <!--#region ComboBox -->
    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="Template" Value="{StaticResource ComboBoxControlTemplate}" />

    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">

        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template" Value="{StaticResource ComboBoxItemControlTemplate}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
            </Trigger>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColorBrush}" />
            </Trigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    
    <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStyle}" />
    <!--#endregion-->

    <!--#region DataGrid -->
    <Style x:Key="PrimaryDataGridStyle" TargetType="DataGrid">

        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="AreRowDetailsFrozen" Value="True" />
        <Setter Property="CanUserResizeColumns" Value="False" />
        <Setter Property="CanUserReorderColumns" Value="False" />
        <Setter Property="CanUserResizeRows" Value="False" />
        <Setter Property="SelectionMode" Value="Single" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackgroundColorBrush}" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="ColumnHeaderStyle">

            <Setter.Value>
                <Style TargetType="DataGridColumnHeader">
                    
                    <Setter Property="FontWeight" Value="ExtraBold" />
                    <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
                    <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="BorderThickness" Value="0 0 2 2" />
                    <Setter Property="BorderBrush" Value="{StaticResource PrimaryBackgroundColorBrush}" />

                    <Style.Triggers>
                        <Trigger Property="CanUserSort" Value="True">
                            <Setter Property="Cursor" Value="Hand" />
                        </Trigger>
                        
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter Property="Background" Value="{StaticResource BackgrounHighlightColorBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryButtonColorBrush}" />
                        </Trigger>

                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter Property="Background" Value="{StaticResource BackgrounHighlightColorBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource PrimaryButtonColorBrush}" />
                        </Trigger>
                    </Style.Triggers>
                    
                </Style>
            </Setter.Value>
            
        </Setter>

        <Setter Property="Visibility" Value="Visible" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ItemsSource.Count}"
                         Value="0">

                <Setter Property="Visibility" Value="Collapsed" />

            </DataTrigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="PrimaryDataGridRowStyle" TargetType="DataGridRow">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="PrimaryDataGridCellStyle" TargetType="DataGridCell">

        <Setter Property="Height" Value="40" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="BorderBrush" Value="Yellow" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="DataGridCell.IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource BackgrounHighlightColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="HyperLinkTextCellStyle" TargetType="DataGridCell" BasedOn="{StaticResource PrimaryDataGridCellStyle}">

        <Setter Property="Foreground" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
        <Setter Property="Tag" Value="HyperLinkTextBlock" />
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <!--#endregion-->

    <!--#region LoadingSpinner -->
    <Style x:Key="LoadingSpinnerStyle" TargetType="fontAwesome:ImageAwesome">

        <Setter Property="Foreground" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
        <Setter Property="Spin" Value="True" />
        <Setter Property="SpinDuration" Value="1.3" />
        <Setter Property="Icon" Value="CircleOutlineNotch" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="36" />


    </Style>
    <!--#endregion-->

    <!--#region CheckBox -->
    <Style x:Key="CheckBoxStyle" TargetType="CheckBox">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonColorBrush}" />
        <Setter Property="Template" Value="{StaticResource CheckBoxControlTemplate}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="DataGridCheckBoxColumnStyle" TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="IsHitTestVisible" Value="False" />
    </Style>

    <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}" />
    <!--#endregion-->

    <!--#region RadioButton -->
    <Style x:Key="RadioButtonStyle" TargetType="RadioButton">

        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryButtonColorBrush}" />

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"  />
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="RadioButton" BasedOn="{StaticResource RadioButtonStyle}" />
    <!--#endregion-->

    <!--#region TabControl -->
    <Style x:Key="TabControlStyle" TargetType="{x:Type TabControl}">

        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="Transparent" />

    </Style>

    <Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource TabControlStyle}" />

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">

        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryButtonColorBrush}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template" Value="{StaticResource TabItemControlTemplate}" />

    </Style>

    <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStyle}" />
    <!--#endregion-->
    
    <!--#region ListView -->
    <Style TargetType="ListView" x:Key="ListViewStyle">
        <Setter Property="Background" Value="{StaticResource PrimaryBackgroundColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
    </Style>

    <Style TargetType="ListView" BasedOn="{StaticResource ListViewStyle}" />

    <Style x:Key="NoHoverListViewItemStyle" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!-- #region Scrollbar -->
    <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
        
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="IsTabStop" Value="false" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}" CornerRadius="10"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">

        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    
                    <Border x:Name="rectangle" Background="{StaticResource BackgrounHighlightColorBrush}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="{TemplateBinding Width}" CornerRadius="8"/>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource BackgrounHighlightColorBrush}" />
                        </Trigger>
                        
                        <Trigger Property="IsDragging" Value="true">
                            <Setter Property="Background" TargetName="rectangle" Value="{StaticResource BackgrounHighlightColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        
        <Setter Property="Template">
            <Setter.Value>

                <ControlTemplate TargetType="{x:Type ScrollBar}">

                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>
                        
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" CornerRadius="10"/>
                        
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">

                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" HorizontalAlignment="Left" Width="17"/>
                            </Track.DecreaseRepeatButton>

                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                            </Track.IncreaseRepeatButton>
                            
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" Margin="3"/>
                            </Track.Thumb>
                            
                        </Track>
                        
                    </Grid>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
        
    </Style>
    <!--#endregion-->

    <!--#region ToolTip -->
    <Style TargetType="ToolTip" x:Key="ToolTipStyle">

        <Setter Property="Placement" Value="Right" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Width" Value="100" />
        <Setter Property="Margin" Value="20,0,0,0" />
        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgrounHighlightColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="PlacementRectangle" Value="60,0,0,0" />
        <Setter Property="HorizontalOffset" Value="15" />
        <Setter Property="VerticalOffset" Value="6" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />

    </Style>

    <Style TargetType="{x:Type ToolTip}" BasedOn="{StaticResource ToolTipStyle}" />
    <!--#endregion-->

</ResourceDictionary>