<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fontAwesome="http://schemas.fontawesome.io/icons/">

    <ControlTemplate x:Key="ButtonControlTemplate" TargetType="{x:Type Button}">
        
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}">
            
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              Margin="{TemplateBinding Padding}" 
                              RecognizesAccessKey="True" />
        </Border>
        
    </ControlTemplate>

    <ControlTemplate x:Key="CheckBoxControlTemplate" TargetType="{x:Type CheckBox}">
        <BulletDecorator Background="Transparent">
            
            <BulletDecorator.Bullet>
                
                <Border BorderBrush="{StaticResource PrimaryButtonColorBrush}"
                        Background="{TemplateBinding Background}"
                        BorderThickness="1"
                        CornerRadius="0" 
                        x:Name="Border" 
                        Width="13" 
                        Height="13">

                    <Path Stroke="{StaticResource PrimaryButtonColorBrush}"
                          Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569"
                          SnapsToDevicePixels="False" 
                          Width="8" Height="9"
                          x:Name="CheckMark"
                          StrokeThickness="2" />
                    
                </Border>
                
            </BulletDecorator.Bullet>
            
            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left"
                              RecognizesAccessKey="True"
                              Margin="4,0,0,0" />
            
        </BulletDecorator>
        
        <ControlTemplate.Triggers>
            
            <Trigger Property="IsChecked" Value="false">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Transparent" />
            </Trigger>
            
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="false">

                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryBtnHoverColor}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
                
            </Trigger>
            
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxControlTemplate" TargetType="{x:Type TextBox}">
        
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </Border>
        
        <ControlTemplate.Triggers>
            
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="border" Value="0.56" />
            </Trigger>
            
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryButtonColorBrush}" />
            </Trigger>
            
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryBtnHoverColorBrush}" />
            </Trigger>
            
        </ControlTemplate.Triggers>
        
    </ControlTemplate>

    <ControlTemplate x:Key="TabItemControlTemplate" TargetType="{x:Type TabItem}">

        <Grid>
            <Border BorderBrush="{StaticResource PrimaryButtonColorBrush}" BorderThickness="2" 
                    Name="Border">

                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header"
                                  x:Name="ContentSite"
                                  Margin="10 5" />

            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">

                <Setter Property="Panel.ZIndex" Value="100" />
                <Setter TargetName="Border" Property="Background" Value="{StaticResource PrimaryButtonColorBrush}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                <Setter Property="Foreground" Value="{StaticResource PrimaryBackgroundColorBrush}" />

            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <!--#region ComboBox -->
    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ComboBoxToggleButton">
        
        <Grid>
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            
            <VisualStateManager.VisualStateGroups>
                
                <VisualStateGroup x:Name="CommonStates">
                    
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />

                </VisualStateGroup>
                
                <VisualStateGroup x:Name="CheckStates">

                    <VisualState x:Name="Checked" />
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Indeterminate" />
                    
                </VisualStateGroup>
                
            </VisualStateManager.VisualStateGroups>
            
            <Border x:Name="Border">

                <Border.Style>

                    <Style TargetType="Border">

                        <Setter Property="Background" Value="{StaticResource SecondaryBackgroundColorBrush}" />
                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryFontColorBrush}" />
                        <Setter Property="CornerRadius" Value="2" />
                        <Setter Property="Grid.ColumnSpan" Value="2" />

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                            </Trigger>
                        </Style.Triggers>

                    </Style>

                </Border.Style>

            </Border>
            
            <Border>

                <Border.Style>

                    <Style TargetType="Border">

                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryFontColorBrush}" />
                        <Setter Property="CornerRadius" Value="2" />
                        <Setter Property="Grid.Column" Value="1" />
                        <Setter Property="Height" Value="40" />

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ElementName=Border, Path=IsFocused}" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                            </DataTrigger>
                        </Style.Triggers>

                    </Style>

                </Border.Style>

                <Path HorizontalAlignment="Center" VerticalAlignment="Center"
                      Data="M 0 0 L 4 4 L 8 0 Z"
                      x:Name="Arrow">

                    <Path.Style>
                        <Style TargetType="Path">

                            <Setter Property="Fill" Value="{StaticResource PrimaryFontColorBrush}" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Border, Path=IsMouseOver}" Value="True">
                                    <Setter Property="Fill" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                                </DataTrigger>

                                <DataTrigger Binding="{Binding ElementName=Border, Path=IsFocused}" Value="True">
                                    <Setter Property="Fill" Value="{StaticResource PrimaryAccentBtnColorBrush}" />
                                </DataTrigger>
                            </Style.Triggers>

                        </Style>
                    </Path.Style>
                
                </Path>
                
            </Border>
            
        </Grid>
        
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">

        <Border Background="{TemplateBinding Background}"
                x:Name="PART_ContentHost"
                Focusable="False" />
        
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxControlTemplate" TargetType="{x:Type ComboBox}">

        <Grid>

            <VisualStateManager.VisualStateGroups>

                <VisualStateGroup x:Name="CommonStates">

                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled" />

                </VisualStateGroup>

                <VisualStateGroup x:Name="EditStates">

                    <VisualState x:Name="Editable">

                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="PART_EditableTextBox">

                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />

                            </ObjectAnimationUsingKeyFrames>

                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="ContentSite">

                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />

                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>

                    </VisualState>

                    <VisualState x:Name="Uneditable" />

                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>

            <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource ComboBoxToggleButton}"
                          x:Name="ToggleButton"
                          ClickMode="Press"
                          Focusable="false"
                          Grid.Column="2" />

            <ContentPresenter ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              VerticalAlignment="Center" HorizontalAlignment="Left"
                              Content="{TemplateBinding SelectionBoxItem}"
                              IsHitTestVisible="False"
                              x:Name="ContentSite"
                              Margin="10 0 0 0" />

            <TextBox Foreground="{StaticResource PrimaryFontColorBrush}"
                     Background="Transparent"
                     Template="{StaticResource ComboBoxTextBox}"
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     x:Name="PART_EditableTextBox"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Center"
                     Visibility="Hidden"
                     Margin="7 0 0 0"
                     Style="{x:Null}"
                     Focusable="True" />

            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   PopupAnimation="Slide"
                   Placement="Bottom"
                   Focusable="False"
                   x:Name="Popup">

                <Grid MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      SnapsToDevicePixels="True"
                      x:Name="DropDown">

                    <Border BorderThickness="2 0 2 2" BorderBrush="{StaticResource PrimaryBackgroundColorBrush}"
                            Background="{StaticResource SecondaryBackgroundColorBrush}"
                            x:Name="DropDownBorder" />

                    <ScrollViewer Margin="0" Padding="2 0 2 2"
                                  SnapsToDevicePixels="True">

                        <StackPanel KeyboardNavigation.DirectionalNavigation="Contained"
                                    IsItemsHost="True" />

                    </ScrollViewer>

                </Grid>

            </Popup>

        </Grid>

        <ControlTemplate.Triggers>

            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder"
                        Property="MinHeight" 
                        Value="95" />
            </Trigger>

            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>

        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxItemControlTemplate" TargetType="{x:Type ComboBoxItem}">

        <Border Background="Transparent"
                SnapsToDevicePixels="True"
                x:Name="Border"
                Padding="10 5">

            <VisualStateManager.VisualStateGroups>

                <VisualStateGroup x:Name="SelectionStates">

                    <VisualState x:Name="Unselected" />

                    <VisualState x:Name="Selected">

                        <Storyboard>
                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"
                                                          Storyboard.TargetName="Border">

                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource BackgrounHighlightColor}" />

                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                    </VisualState>

                    <VisualState x:Name="SelectedUnfocused" />

                </VisualStateGroup>

            </VisualStateManager.VisualStateGroups>

            <ContentPresenter />

        </Border>
        
    </ControlTemplate>
    <!--#endregion-->

    <ControlTemplate x:Key="ToggleButtonControlTemplate" TargetType="{x:Type ToggleButton}">

        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>

    </ControlTemplate>

    <ControlTemplate x:Key="DatePickerControlTemplate" TargetType="{x:Type DatePicker}">

        <Grid x:Name="PART_Root">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <DatePickerTextBox x:Name="PART_TextBox">

                <DatePickerTextBox.Style>
                    <Style TargetType="{x:Type DatePickerTextBox}">

                        <Setter Property="BorderThickness" Value="2" />
                        <Setter Property="BorderBrush" Value="{StaticResource PrimaryFontColorBrush}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="IsReadOnly" Value="True" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource PrimaryFontColorBrush}" />
                        <Setter Property="Padding" Value="5 7" />
                        <Setter Property="Template" Value="{StaticResource TextBoxControlTemplate}" />
                        <Setter Property="Grid.ColumnSpan" Value="2" />
                        <Setter Property="Visibility" Value="Visible" />

                        <Setter Property="Template">

                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DatePickerTextBox}">

                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="True"
                                            x:Name="border">
                                    
                                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                                      x:Name="PART_ContentHost" 
                                                      Focusable="false" />
                                    
                                    </Border>

                                    <ControlTemplate.Triggers>

                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Opacity" TargetName="border" Value="0.56" />
                                        </Trigger>

                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryFontColorBrush}" />
                                        </Trigger>

                                        <Trigger Property="IsFocused" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PrimaryFontColorBrush}" />
                                        </Trigger>

                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>

                        </Setter>

                        <Style.Resources>
                            <Style TargetType="Border">
                                <Setter Property="CornerRadius" Value="2" />
                            </Style>
                        </Style.Resources>
                        
                    </Style>
                </DatePickerTextBox.Style>
                
            </DatePickerTextBox>

            <Button x:Name="DatePickerClearValueButton"
                    Tag="DatePickerClearValueButton"
                    ToolTip="Clear selected value"
                    Visibility="Collapsed">

                <Button.Content>

                    <fontAwesome:ImageAwesome Foreground="{StaticResource ErrorColorBrush}"
                                              Icon="CalendarTimesOutline"
                                              x:Name="ButtonIcon"
                                              Width="20" />
                </Button.Content>

                <Button.Style>
                    <Style TargetType="{x:Type Button}">

                        <Setter Property="HorizontalAlignment" Value="Right" />
                        <Setter Property="Padding" Value="0 0 10 0" />
                        <Setter Property="FontSize" Value="18" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="FontFamily" Value="Arial" />
                        <Setter Property="FontWeight" Value="DemiBold" />
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="Template" Value="{StaticResource ButtonControlTemplate}" />

                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.6" />
                            </Trigger>
                        </Style.Triggers>
                        
                    </Style>
                </Button.Style>

            </Button>

            <Border BorderThickness="2 0 0 0" BorderBrush="{StaticResource PrimaryFontColorBrush}"
                    Padding="0 0 2 0"
                    Grid.Column="1"
                    Width="40">

                <Button x:Name="PART_Button" ToolTip="Select value">
                
                    <Button.Style>
                    
                        <Style TargetType="{x:Type Button}">

                            <Setter Property="OverridesDefaultStyle" Value="True" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">

                                        <fontAwesome:ImageAwesome Foreground="{StaticResource PrimaryButtonColorBrush}"
                                                                  Icon="CalendarPlusOutline"
                                                                  x:Name="ButtonIcon"
                                                                  Width="20" />

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">

                                                <Setter TargetName="ButtonIcon"
                                                        Property="Foreground"
                                                        Value="{StaticResource PrimaryBtnHoverColorBrush}" />

                                                <Setter TargetName="ButtonIcon"
                                                        Property="Cursor"
                                                        Value="Hand" />

                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        
                        </Style>
                    
                    </Button.Style>
                
                </Button>
                
            </Border>
            
            
            <Popup AllowsTransparency="True"
                   x:Name="PART_Popup" 
                   StaysOpen="False" />

        </Grid>
        
    </ControlTemplate>
    
</ResourceDictionary>