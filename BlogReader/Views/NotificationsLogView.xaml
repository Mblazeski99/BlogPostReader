<UserControl x:Class="BlogReader.Views.NotificationsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:viewModels="clr-namespace:BlogReader.ViewModels"
             xmlns:fontAwesome="http://schemas.fontawesome.io/icons/"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:gfp="clr-namespace:BlogReader.CustomControls.GridFilterPopup"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:NotificationsLogViewModel, IsDesignTimeCreatable=True}">
    
    <Grid IsHitTestVisible="{Binding EnableInput}">

        <Grid.RowDefinitions>
            
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            
        </Grid.RowDefinitions>

        <ContentControl Content="Notifications" ContentTemplate="{StaticResource ViewHeaderDataTemplate}" />

        <StackPanel Grid.Row="1" Orientation="Horizontal">

            <StackPanel Visibility="{Binding HasItems, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Orientation="Horizontal">

                <Button Command="{Binding ClearNotificationsCommand}" Content="Clear Notifications" />
                
                <gfp:GridFilterPopupButton Margin="10 0 0 0" FilterDescriptor="{Binding FilterDescriptor}">

                    <interactivity:Interaction.Triggers>

                        <interactivity:EventTrigger EventName="OnFilterClicked">
                            <interactivity:InvokeCommandAction Command="{Binding FilterClickedCommand}" PassEventArgsToCommand="True" />
                        </interactivity:EventTrigger>

                        <interactivity:EventTrigger EventName="OnClearFilterClicked">
                            <interactivity:InvokeCommandAction Command="{Binding ClearFilterClickedCommand}" />
                        </interactivity:EventTrigger>

                    </interactivity:Interaction.Triggers>

                </gfp:GridFilterPopupButton>

            </StackPanel>

            <fontAwesome:ImageAwesome Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Style="{StaticResource LoadingSpinnerStyle}"
                                      Margin="10 0 0 0" />
                
        </StackPanel>

        <Grid Grid.Row="2" Margin="0 10 0 0">

            <fontAwesome:ImageAwesome Visibility="{Binding IsItemsGridLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                                      Style="{StaticResource LoadingSpinnerStyle}" />

            <Grid Visibility="{Binding IsItemsGridLoading, Converter={StaticResource InverseBooleanToVisibilityConverter}}">

                <DataGrid Style="{StaticResource PrimaryDataGridStyle}"
                          ItemsSource="{Binding Notifications}">

                    <DataGrid.Resources>
                        <Style TargetType="DataGridRow" BasedOn="{StaticResource PrimaryDataGridRowStyle}" />
                        <Style TargetType="DataGridCell" BasedOn="{StaticResource PrimaryDataGridCellStyle}" />
                    </DataGrid.Resources>

                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding DateCreated, Mode=OneWay, StringFormat={StaticResource PrimaryDateFormatString}}"
                                            Header="Date" 
                                            Width="205" />

                        <DataGridTemplateColumn Header="Type" Width="100">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>

                                    <TextBlock Text="{Binding MessageType, Mode=OneWay}"
                                               Foreground="{Binding MessageTypeColor}"
                                               Margin="5 0 0 0" />

                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                            
                        </DataGridTemplateColumn>
                        
                        <DataGridTextColumn Binding="{Binding Message, Mode=OneWay}"
                                            Header="Notification"
                                            Width="*" />
                        
                    </DataGrid.Columns>

                </DataGrid>

            </Grid>

        </Grid>

    </Grid>

</UserControl>
